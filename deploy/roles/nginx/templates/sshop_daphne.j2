upstream {{ application_name }} {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response (in case the Unicorn master nukes a
  # single worker for timing out).

  server 127.0.0.1:8000;
}

server {
    listen      80;
    server_name {{ nginx_server_name }};

    access_log {{ nginx_access_log_file }};
    error_log {{ nginx_error_log_file }};


    # nginx should serve up static files and never send to the WSGI server
    location /static {
        autoindex on; 
        alias   {{ nginx_static_dir }};
    }

    location /media/ {
        alias   {{ nginx_media_dir }};
    }

    location / {
        proxy_pass http://{{ application_name }};
        proxy_http_version 1.1;
        # We want proxy_buffering off for proxying to websockets.
        proxy_buffering off;
         
        # http://en.wikipedia.org/wiki/X-Forwarded-For
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
         
        # pass the Host: header from the client for the sake of redirects
        proxy_set_header Host $http_host;
         
        # We've set the Host header, so we don't need Nginx to muddle
        # about with redirects
        proxy_redirect off;
         
        # Depending on the request value, set the Upgrade and
        # connection headers
        proxy_set_header Upgrade $http_upgrade;
         
        proxy_set_header Connection "upgrade";
    }

    # Error pages
    error_page 500 502 504 /500.html;
    location = /500.html {
        root {{ project_path }}/{{ application_name }}/templates/;
    }

    error_page 503 /maintenance_on.html;
    location = /maintenance_on.html {
        root {{ virtualenv_path }}/;
    }
}